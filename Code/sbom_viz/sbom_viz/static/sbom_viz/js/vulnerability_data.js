let fetchedData = null; // try and save the data for later use to save time

export async function getVulnerabilityData(){

    
    if (fetchedData != null)
        return Promise.resolve(fetchedData);
           
    // Try to fetch from sec-info,
    // if we encounter an error than alert the user
    try {
        const response = await fetch("http://127.0.0.1:8000/sec-info/");
        if (response.ok){
            const json = await response.json();

            // update the number of vulnerabilities
            document.getElementById("number-affected-components").textContent = Object.keys(json.Effected_Components).length;
            
            document.querySelector('#vuln-loading').innerHTML = "";
            //unhide ui elements
            var hidden = document.querySelectorAll('.hidden')
            hidden.forEach(element => element.classList.remove('hidden'));
            
            return json.Summary;
        }
        throw new Error('Something went wrong when gathering security information')
    }
    catch (error) {
        document.querySelector('#loading').innerHTML = `Sorry!<br>${error}`

        alert("Sorry, something went wrong when gathering security information from the inputted SBOM. Neither bomber nor trivy were able to parse the file. Please try again with another file.")
        console.log(error);
    }
}

export async function getVulnerabilityTableData(){
    const json = await getVulnerabilityData();
    const processedData = Object.keys(json.Top_10).map(key => {
        const item = json.Top_10[key];
        return {
            Component: item.SBOM_ID.replace(/^SPDXRef-/, ""),
            "CVE ID": key,
            Score: item.Displayed_CVSS,
            Severity: item.Severity,
            Title: item.Title
        };
    });
    return processedData;
}

export async function getVulnerabilityDistribution(){
    const json = await getVulnerabilityData();
    return json.SeverityDistr;
}

fetchedData = getVulnerabilityData();